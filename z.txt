


/* ========== Post Actions (Icons + Counts) ========== */
.post-actions {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 1.8rem;
  margin-top: 0.9rem;
  margin-bottom: 0.8rem; 
  padding-left: 0.3rem;
}

.action-item {
  display: inline-flex;
  align-items: center;
  gap: 0.3rem;
  font-size: 0.85rem;
  color: var(--color-text-secondary, #6b6b6b);
  cursor: pointer;
  transition: color 0.2s ease;
  position: relative;
  width: 50px;
  justify-content: center;
  border: none;
  background: none;
  padding: 0;
}

.action-item i {
  pointer-events: none;
}

.action-item span {
  width: 12px;
  text-align: center;
}

/* ✅ Create an isolated box for the icon to scale inside */
.action-item .icon-box {
  width: 22px;
  height: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  transition: transform 0.15s ease;
}

.action-item svg {
  width: 18px;
  height: 18px;
  stroke: #888;
  fill: none;
  transition: fill 0.15s ease, stroke 0.15s ease;
  pointer-events: none;
}

/* ❤️ When liked */
.action-item.liked svg {
  stroke: #e74c3c;
  fill: #e74c3c;
}

/* 💫 Scale animation inside fixed box */
.action-item.liked .icon-box {
  transform: scale(1.15);
}

.action-item:hover .icon-box {
  transform: scale(1.1);
}



/* ========== Text-Only Post ========== */
.text-content {
  font-size: 1.3rem;
  font-weight: 700;
  color: var(--color-text-primary);
  text-align: center;
  margin: 0.6rem 0 0.4rem;
  line-height: 1.5;
  word-wrap: break-word;
}























my-social-app/
│
├─ index.html
├─ package.json
├─ vite.config.js
├─ node_modules/
│
└─ src/
   ├─ main.js                # entry point (imports and runs app)
   │
   ├─ utils/                 # reusable helpers
   │   └─ storage.js         # localStorage functions (saveUser, getUser, etc.)
   │
   ├─ features/              # main app features
   │   ├─ auth/              # login & signup
   │   │   ├─ auth.view.js   # rendering login/signup forms
   │   │   ├─ auth.controller.js # logic: validate, switch forms, login, signup
   │   │   └─ auth.css
   │   │
   │   ├─ feed/              # posts + comments
   │   │   ├─ feed.view.js
   │   │   └─ feed.controller.js
   │   │
   │   ├─ form/              # post form (new post)
   │   │   └─ form.controller.js
   │   │
   │   └─ profile/           # user profile page
   │       ├─ profile.view.js
   │       └─ profile.controller.js
   │
   ├─ styles/                # global styling
   │   └─ global.css
   │
   └─ assets/                # images, icons
       └─ images/
           └─ login-bg.png




  I want the upper half of the profile header to have a background color, and the lower half to blend into the rest of the page, so the profile image sits in between these two sections — like a Facebook-style transition between cover and body.










1. Current Work:
   - The user requested to add a reset button on the edit profile page that removes added interests and bio, with a confirmation modal before reset, and the reset only applies when "Save Changes" is clicked.

2. Key Technical Concepts:
   - JavaScript event handling for button clicks
   - Modal creation and management
   - Form state management (storing temporary changes)
   - User confirmation dialogs
   - DOM manipulation for dynamic UI elements

3. Relevant Files and Code:
   - src/features/profile/editProfile.js: Main edit profile logic, handles form submission and interests management
   - src/features/profile/editProfile.css: Styling for the edit profile form
   - src/utils/notification.js: Utility for showing notices (could be adapted for modal)

4. Problem Solving:
   - Need to add a reset button that temporarily clears bio and interests
   - Implement a confirmation modal before applying reset
   - Ensure reset only takes effect on form submission, not immediately
   - Store original values to allow cancellation

5. Pending Tasks and Next Steps:
   - Add reset button to the form actions in editProfile.js
   - Create a confirmation modal function
   - Implement temporary reset logic that stores changes but doesn't apply until save
   - Update CSS for reset button styling
   - Test the functionality to ensure reset works correctly with confirmation

